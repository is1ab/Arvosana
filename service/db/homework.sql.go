// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.23.0
// source: homework.sql

package db

import (
	"context"

	"github.com/is1ab/Arvosana/types"
)

const addHomework = `-- name: AddHomework :exec
INSERT INTO homework (name, created_at, deadline)
VALUES (?, datetime('now', 'localtime'), ?)
`

type AddHomeworkParams struct {
	Name     string
	Deadline types.Datetime
}

func (q *Queries) AddHomework(ctx context.Context, arg AddHomeworkParams) error {
	_, err := q.db.ExecContext(ctx, addHomework, arg.Name, arg.Deadline)
	return err
}

const getAllHomeworks = `-- name: GetAllHomeworks :many
SELECT name, created_at, deadline FROM homework
`

type GetAllHomeworksRow struct {
	Name      string
	CreatedAt types.Datetime
	Deadline  types.Datetime
}

func (q *Queries) GetAllHomeworks(ctx context.Context) ([]GetAllHomeworksRow, error) {
	rows, err := q.db.QueryContext(ctx, getAllHomeworks)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetAllHomeworksRow
	for rows.Next() {
		var i GetAllHomeworksRow
		if err := rows.Scan(&i.Name, &i.CreatedAt, &i.Deadline); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
